<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;com.tahir.functionalprogramming.FP01Structured&apos; to &apos;FP01StructuredFunctionalApproach&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Original element: &apos;com.tahir.functionalprogramming.FP01Structured&apos;&#x0D;&#x0A;- Renamed element: &apos;com.tahir.functionalprogramming.FP01StructuredFunctionalApproach&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;FP01Structured&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.tahir.functionalprogramming{FP01Structured.java[FP01Structured" matchStrategy="1" name="FP01StructuredFunctionalApproach" qualified="false" references="true" similarDeclarations="false" stamp="1708431264347" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;ls&apos; from expression &apos;List.of(1,10,9,8,15,7,9,32)&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;ls&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.FP01StructuredFunctionalApproach.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;List.of(1,10,9,8,15,7,9,32)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;ls&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming{FP01StructuredFunctionalApproach.java" name="ls" replace="true" replaceAllInThisFile="false" selection="182 27" stamp="1708431584671" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;EvenPredicate&apos; from expression &apos;number -&gt; number % 2 == 0&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;EvenPredicate&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI01Exercise.printSquareOfAllNumbersLamdaExpression(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;number -&gt; number % 2 == 0&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;EvenPredicate&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI01Exercise.java" name="EvenPredicate" replace="true" replaceAllInThisFile="false" selection="494 25" stamp="1708683764905" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;squareMapper&apos; from expression &apos;number -&gt; number * 2&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;squareMapper&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI01Exercise.printSquareOfAllNumbersLamdaExpression(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;number -&gt; number * 2&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;squareMapper&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI01Exercise.java" name="squareMapper" replace="true" replaceAllInThisFile="false" selection="624 20" stamp="1708683789946" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;printAction&apos; from expression &apos;System.out::println&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;printAction&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI01Exercise.printSquareOfAllNumbersLamdaExpression(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;System.out::println&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;printAction&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI01Exercise.java" name="printAction" replace="true" replaceAllInThisFile="false" selection="769 19" stamp="1708683824572" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;accumulator&apos; from expression &apos;Integer::sum&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;accumulator&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI02ExerciseIntegerSum.addListElementsFP(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Integer::sum&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;accumulator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI02ExerciseIntegerSum.java" name="accumulator" replace="true" replaceAllInThisFile="false" selection="836 12" stamp="1708684804732" varType="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;FI02ExerciseIntegerSum.java&apos; to &apos;FunctionalProgramming/src/com.tahir.functionalprogramming.fi&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Destination element: &apos;FunctionalProgramming/src/com.tahir.functionalprogramming.fi&apos;&#x0D;&#x0A;- Original element: &apos;com.tahir.functionalprogramming.fi.FI02ExerciseIntegerSum.java&apos;" description="Copy compilation unit" destination="/src&lt;com.tahir.functionalprogramming.fi" element1="/src&lt;com.tahir.functionalprogramming.fi{FI02ExerciseIntegerSum.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1708685333993" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;evenPredicate&apos; from expression &apos;i -&gt; i % 2 == 0&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;evenPredicate&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.addListElementsFP(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;i -&gt; i % 2 == 0&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;evenPredicate&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI03ExerciseBehaviorParameterization.java" name="evenPredicate" replace="true" replaceAllInThisFile="false" selection="387 9" stamp="1708685536944" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;oddPredicate&apos; from expression &apos;i -&gt; i % 2 != 0&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;oddPredicate&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.addListElementsFP(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;i -&gt; i % 2 != 0&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;oddPredicate&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI03ExerciseBehaviorParameterization.java" name="oddPredicate" replace="true" replaceAllInThisFile="false" selection="549 9" stamp="1708685556519" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void extracted(List&lt;Integer&gt; integerList, Predicate&lt;? super Integer&gt; predicate)&apos; from &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.main(...)&apos; to &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.tahir.functionalprogramming.fi{FI03ExerciseBehaviorParameterization.java" name="extracted" replace="true" selection="494 62" stamp="1708685750280" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.main(...).evenPredicate&apos; in &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.main(...)&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Original element: &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.main(...).evenPredicate&apos;" description="Inline local variable &apos;evenPredicate&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI03ExerciseBehaviorParameterization.java" selection="347 0" stamp="1708685815248" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.main(...).oddPredicate&apos; in &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.main(...)&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Original element: &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.main(...).oddPredicate&apos;" description="Inline local variable &apos;oddPredicate&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI03ExerciseBehaviorParameterization.java" selection="399 12" stamp="1708685826612" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;FI03ExerciseBehaviorParameterization.java&apos; to &apos;FunctionalProgramming/src/com.tahir.functionalprogramming.fi&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Destination element: &apos;FunctionalProgramming/src/com.tahir.functionalprogramming.fi&apos;&#x0D;&#x0A;- Original element: &apos;com.tahir.functionalprogramming.fi.FI03ExerciseBehaviorParameterization.java&apos;" description="Copy compilation unit" destination="/src&lt;com.tahir.functionalprogramming.fi" element1="/src&lt;com.tahir.functionalprogramming.fi{FI03ExerciseBehaviorParameterization.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1708686027077" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;mapper&apos; from expression &apos;x -&gt; x * x&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;mapper&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI04ExerciseBehaviorParameterizationforMap.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;x -&gt; x * x&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;mapper&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI04ExerciseBehaviorParameterizationforMap.java" name="mapper" replace="true" replaceAllInThisFile="false" selection="363 8" stamp="1708686095015" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void extracted(List&lt;Integer&gt; integerList, Function&lt;? super Integer,? extends Integer&gt; mapper)&apos; from &apos;com.tahir.functionalprogramming.fi.FI04ExerciseBehaviorParameterizationforMap.main(...)&apos; to &apos;com.tahir.functionalprogramming.fi.FI04ExerciseBehaviorParameterizationforMap&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;com.tahir.functionalprogramming.fi.FI04ExerciseBehaviorParameterizationforMap&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.tahir.functionalprogramming.fi{FI04ExerciseBehaviorParameterizationforMap.java" name="extracted" replace="false" selection="465 77" stamp="1708686160034" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;supplier&apos; from expression &apos;() -&gt; UUID.randomUUID()&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;supplier&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI05Supplier.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;() -&gt; UUID.randomUUID()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;supplier&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI05Supplier.java" name="supplier" replace="true" replaceAllInThisFile="false" selection="214 21" stamp="1708692246789" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;identity&apos; from expression &apos;Function.identity()&apos;&#x0D;&#x0A;- Original project: &apos;FunctionalProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;identity&apos;&#x0D;&#x0A;- Destination method: &apos;com.tahir.functionalprogramming.fi.FI07MethodReferencing.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Function.identity()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;identity&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.tahir.functionalprogramming.fi{FI07MethodReferencing.java" name="identity" replace="true" replaceAllInThisFile="false" selection="483 19" stamp="1708698094234" varType="false" version="1.0"/>
</session>